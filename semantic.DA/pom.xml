<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <groupId>io.github.odys-z</groupId>
  <artifactId>semantic.DA</artifactId>
  <version>1.5.18-SNAPSHOT</version>
  <packaging>jar</packaging>

  <name>semantic.DA</name>
  <description>JDBC Data Access with Semantics Support</description>
  <url>http://github.com/odys-z/semantic-DA</url>

  <licenses>
    <license>
      <name>The Apache Software License, Version 2.0</name>
      <url>http://www.apache.org/licenses/LICENSE-2.0.txt</url>
    </license>
  </licenses>

  <developers>
    <developer>
      <name>Ody Zhou</name>
      <email>odys.zhou@gmail.com</email>
      <organization>odysz.github.io</organization>
      <organizationUrl>https://odysz.github.io</organizationUrl>
    </developer>
  </developers>

  <properties>
    <javaVersion>1.8</javaVersion>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
	<maven.compiler.source>1.8</maven.compiler.source>
	<maven.compiler.target>1.8</maven.compiler.target>
	<maven-jar-plugin.version>3.1.1</maven-jar-plugin.version>
  </properties>

  <dependencies>
	<dependency>
    	<groupId>org.junit.jupiter</groupId>
    	<artifactId>junit-jupiter-engine</artifactId>
        <version>5.7.1</version>
	    <scope>test</scope>
    </dependency>

	<!-- https://mvnrepository.com/artifact/commons-io/commons-io -->
	<dependency>
		<groupId>commons-io</groupId>
		<artifactId>commons-io</artifactId>
		<version>[2.15.0,)</version>
	</dependency>

	<dependency>
		<!-- As sonatype SNAPSHOT is updating on a daily base, you may update this with:
			mvn clean package -U
			to update immediately. -->
	    <groupId>io.github.odys-z</groupId>
	    <artifactId>semantics.transact</artifactId>
	    <version>[1.5.67,)</version>
	</dependency>

	<!-- https://mvnrepository.com/artifact/org.xerial/sqlite-jdbc -->
	<dependency>
	    <groupId>org.xerial</groupId>
	    <artifactId>sqlite-jdbc</artifactId>
	    <version>3.44.0.0</version>
	</dependency>
	
	<!-- https://mvnrepository.com/artifact/mysql/mysql-connector-java -->
	<dependency>
		<groupId>mysql</groupId>
		<artifactId>mysql-connector-java</artifactId>
		<version>[8.0.33,)</version>
	    <!-- This is only needed when testing, but we deployed this dependency because we don't want to skip tests when deploying.
	    	see https://stackoverflow.com/questions/30108053/can-i-configure-maven-to-ignore-test-scoped-dependencies-if-im-skipping-runni
		<scope>test</scope>
		 -->
	</dependency>

	<!-- ojdbc14.jar
		https://mvnrepository.com/artifact/com.oracle/ojdbc14 
		Since oracle JDBC driver package needing license agreement, you need install ojdbc.jar like this:
		mvn install:install-file -Dfile=lib/o-SNAPSHOTjdbc7.jar -DgroupId=com.oracle -DartifactId=ojdbc14 -Dversion=12.1.0.1 -Dpackaging=jar
		Oracle JDBC seems available at Maven Centrial since OJDBC 18, for JDK 17.

		Since oracle JDBC driver package needing license agreement, you need install ojdbc.jar like this:
		mvn install:install-file -Dfile=lib/o-SNAPSHOTjdbc7.jar -DgroupId=com.oracle -DartifactId=ojdbc14 -Dversion=12.1.0.1 -Dpackaging=jar
	-->
	<dependency>
	    <groupId>com.oracle</groupId>
	    <artifactId>ojdbc14</artifactId>
	    <version>12.1.0.1</version>
	    <scope>provided</scope>
	</dependency>

  </dependencies>

  <scm>
  	<connection>scm:git:git://github.com/odys-z/semantic-DA.git</connection>
  	<developerConnection>scm:git:odys-z@github.com:odys-z/semantic-DA.git</developerConnection>
  	<url>https://github.com/odys-z/semantic-DA</url>
  	<tag>HEAD</tag>
  </scm>

  <build>
    <testResources>
   	<testResource>
   		<directory>${project.basedir}/src/test/java</directory>
   	</testResource>
    </testResources>

    <resources>
      <resource>
        <directory>${project.basedir}/src/main/java</directory>
        <includes>
          <include>**/*.sqlite.ddl</include>
          <include>**/*.txt</include>
        </includes>
      </resource>
    </resources>

    <plugins>
      <plugin>
      	<artifactId>maven-compiler-plugin</artifactId>
        <version>3.13.0</version>
        <configuration>
          <source>1.8</source>
          <target>1.8</target>
        </configuration>
      </plugin>

	  <plugin>
		<groupId>org.apache.maven.plugins</groupId>
		<artifactId>maven-surefire-plugin</artifactId>
		<version>3.5.2</version>
		<configuration>
			<argLine>-Dfile.encoding=UTF-8</argLine>
		</configuration>
	  </plugin>

	  <plugin>
		  <groupId>org.sonatype.central</groupId>
		  <artifactId>central-publishing-maven-plugin</artifactId>
		  <version>0.7.0</version>
		  <extensions>true</extensions>
		  <configuration>
			<publishingServerId>central</publishingServerId>
		  </configuration>
	  </plugin>

	  <!-- JavaDoc and source attachment -->
	  <plugin>
	      <groupId>org.apache.maven.plugins</groupId>
	      <artifactId>maven-source-plugin</artifactId>
	      <version>2.2.1</version>
	      <executions>
	        <execution>
	          <id>attach-sources</id>
	          <goals>
	            <goal>jar-no-fork</goal>
	          </goals>
	        </execution>
	      </executions>
	  </plugin>

	  <plugin>
	      <groupId>org.apache.maven.plugins</groupId>
	      <artifactId>maven-javadoc-plugin</artifactId>
	      <version>3.5.0</version>
	      <executions>
	        <execution>
	          <id>attach-javadocs</id>
	          <goals>
	            <goal>jar</goal>
	          </goals>
	        </execution>
	      </executions>
	      <configuration>
	      	<failOnError>false</failOnError>
	      	<additionalJOption>-Xdoclint:none</additionalJOption>
	      </configuration>
	  </plugin>

	  <plugin>
		<!-- For troubleshooting like
			[ERROR] Failed to execute goal org.apache.maven.plugins:
			maven-compiler-plugin:3.7.0:compile (default-compile) on
			project semantic.jserv: Compilation failure: Compilation failure...

		  see https://dzone.com/articles/publish-your-artifacts-to-maven-central -->
		<groupId>org.apache.maven.plugins</groupId>
		<artifactId>maven-gpg-plugin</artifactId>
		<version>1.5</version>
		<executions>
			<execution>
			  <id>semantics.DA</id>
			  <phase>verify</phase>
			  <goals>
				<goal>sign</goal>
			  </goals>
                  <!--
			  <configuration>
			  <gpgArguments>
				  <arg>-[no space] -pinentry-mode</arg>
				  <arg>loopback</arg>
			  </gpgArguments>
		  	  </configuration>
              -->
			</execution>
		</executions>
	  </plugin>
     </plugins>
   </build>

</project>
